name: Terraform CI - Dev

on:
  push:
    paths:
      - 'environments/dev/**'
      - 'modules/**'
  pull_request:
    paths:
      - 'environments/dev/**'
      - 'modules/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: environments/dev

    env:
      TF_VAR_environment: ${{ secrets.TF_VAR_ENVIRONMENT }}
      TF_VAR_project_name: ${{ secrets.TF_VAR_PROJECT_NAME }}
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_cidr_block: ${{ secrets.TF_VAR_CIDR_BLOCK }}
      TF_VAR_instance_type: ${{ secrets.TF_VAR_INSTANCE_TYPE }}
      TF_VAR_state_bucket: ${{ secrets.STATE_BUCKET }}
      TF_VAR_vpcproject_name: ${{ secrets.VPC_PROJECT_NAME }}
      TF_VAR_instance_name: ${{ secrets.INSTANCE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::961535847135:role/perp-dev-github-actions-role
          aws-region: us-east-1
          role-session-name: GitHubActionsTerraformDev

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init -input=false -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Format Check
        run: terraform fmt -check -no-color

      - name: Terraform Plan
        run: terraform plan -out=tfplan -no-color -input=false

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: environments/dev/tfplan

      # Uncomment when ready to deploy
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve -no-color -input=false tfplan

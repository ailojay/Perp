name: 'Terraform Plan and Apply for SecOps'

on:
  push:
    branches: [ main ]
    paths:
      - 'environments/secops/**'   # Run only when secops code changes
      - 'modules/**'               # Or when shared modules change
      - 'policies/**'              # Or when policies change
  pull_request:
    branches: [ main ]
    paths:
      - 'environments/secops/**'
      - 'modules/**'
      - 'policies/**'

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to checkout code

env:
  TF_WORKING_DIR: './environments/secops'  # Define once, use everywhere

jobs:
  terraform-secops:
    name: 'Terraform on SecOps Account'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.SECOPS_DEPLOY_ROLE_ARN }}
          role-session-name: GitHubActions-SecOps-Deploy
          mask-aws-account-id: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraplanform Format Check
        run: terraform fmt -check
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}
        if: github.event_name == 'pull_request'

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}
        if: github.event_name == 'push'